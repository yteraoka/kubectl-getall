#!/bin/bash
#
# Usage: kubectl getall [-A|--all-namespaces] [-U] [-n|--namespace NAMESPACE] [--contains string]
#        kubectl getall [-A|--all-namespaces] [-U] [-n|--namespace NAMESPACE] [-o yaml|json]
#

namespace=
unnamespaced=
output=
contains=
version=0.1.0
#all_namespaces=$(kubectl get ns -o jsonpath='{.items[*].metadata.name}')

filter(){
  title="$1"
  header=
  count=0
  while read line; do
    case "$line" in
      NAME*|LAST*)
        header="$line"
        ;;
      *)
        if [ -z "$line" ] ; then
          continue
        fi
        if [ -z "$contains" ] ; then
          if [ -n "$header" ] ; then
            echo "[$title]"
            echo "$header"
            header=
          fi
          echo "$line"
          count=$(( $count + 1 ))
        else
          echo "$line" | grep -q "$contains"
          if [ $? -eq 0 ] ; then
            if [ -n "$header" ] ; then
              echo "[$title]"
              echo "$header"
              header=
            fi
            echo "$line" | grep --color "$contains"
            count=$(( $count + 1 ))
          fi
        fi
        ;;
    esac
  done
  if [ $count -gt 0 ] ; then
    echo
  fi
}

while [ $# -gt 0 ] ; do
  key="$1"

  case "$key" in
    -A|--all-namespaces)
      namespace="--all-namespaces"
      shift
      ;;
    -n|--namespace)
      namespace="-n $2"
      shift
      shift
      ;;
    -o|--output)
      output="-o $2"
      shift
      shift
      ;;
    --contains)
      contains="$2"
      shift
      shift
      ;;
    -U|--unnamespaced)
      unnamespaced=true
      shift
      ;;
    -v|--version)
      echo "kubectl-getall $version"
      exit 1
  esac
done

if [ -z "$namespace" ] ; then
  type kubens > /dev/null 2>&1 && namespace=$(kubens -c)
  if [ -z "$namespace" ] ; then
    namespace="--all-namespaces"
  else
    namespace="-n $namespace"
  fi
fi

if [ "$namespace" = "--all-namespaces" -o -n "$unnamespaced" ] ; then
  echo "##### UNNAMESPACED #####"
  for resource in $(kubectl api-resources --namespaced=false -o name); do
    kubectl get $resource $output 2> /dev/null | filter $resource
  done
fi

if [ "$namespace" = "--all-namespaces" ] ; then
  echo "##### NAMESPACED #####"
else
  echo "##### ${namespace##-n } #####"
fi
for resource in $(kubectl api-resources --namespaced=true -o name); do
  if [ "$resource" != "events.events.k8s.io" -a "$resource" != "events" ] ; then
    kubectl get $resource $namespace $output 2> /dev/null | filter $resource
  fi
done
